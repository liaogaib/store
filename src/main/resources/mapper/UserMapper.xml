<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace属性： 用于指定当前的映射文件和哪个接口进行映射，需要指定接口的文件路径，需要标注包的完整路径接口 -->
<mapper namespace="com.lzw.store.mapper.UserMapper">

    <sql id="columns">
        uid,username,password,salt,phone,email,gender,avatar,is_delete,created_user,created_time,modified_user,modified_time
    </sql>

    <!--  自定义映射规则：resultMap标签来完成映射规则的定义  -->
    <!--
        id属性： 标签这个映射负责分配一个唯一的id值，对应的就是resultMap="id属性的值"属性的取值
        type属性： 取值时一个类，表示的是数据库的查询结果与java中哪个实体类进行结果集的映射
      -->
    <resultMap id="UserEntityMap" type="com.lzw.store.entity.User">
        <!--    将表的字段和类的属性不一致的字段进行匹配指定， 名称一致的字段可以省略不写    -->
        <!--
             配合完成名称不一致的映射：
             column：表示表中的字段名称
             property：表示类中的属性名称
        -->
        <!--    自定义映射规则时逐渐不能省略，即使其表字段名称与类属性名称一致    -->
        <id column="uid" property="uid"></id>
        <result column="is_delete" property="isDelete"></result>
        <result column="created_user" property="createdUser"></result>
        <result column="created_time" property="createdTime"></result>
        <result column="modified_user" property="modifiedUser"></result>
        <result column="modified_time" property="modifiedTime"></result>
    </resultMap>

    <!--
        useGeneratedKeys属性: 表时开启某个字段的值递增（主键设置为递增）
        keyProperty: 表示将表中的哪个字段作为主键进行递增
    -->
    <insert id="insertUser" useGeneratedKeys="true" keyProperty="uid">
        INSERT INTO
            t_user (username, password, salt, phone, email, gender, avatar, is_delete, created_user, created_time, modified_user, modified_time)
        VALUES
            (#{username}, #{password}, #{salt}, #{phone}, #{email}, #{gender}, #{avatar}, #{isDelete}, #{createdUser}, #{createdTime}, #{modifiedUser}, #{modifiedTime})
    </insert>

    <!--
        当表字段名称与实体类属性名称一致时使用：
            resultType: 表示查询的结果集类型， 只需要指定对应的映射类的类型， 并且包含完整包接口：resultType="com.lzw.store.entity.User"
        当表字段名称与实体类属性名称有差异时使用：
            resultMap:定义查询结果集与属性的映射规则
      -->
    <select id="selectByUsername" resultMap="UserEntityMap">
        SELECT <include refid="columns"></include> FROM t_user WHERE username = #{username}
    </select>
</mapper>